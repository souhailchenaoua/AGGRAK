name: Deploy Angular to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  NODE_VERSION: "20"
  # CHANGE THIS to your repo name exactly as it appears on GitHub (case-sensitive)
  REPO_NAME: "AGGRAK"
  # Project Pages MUST use "/<repo>/" as both base-href and deploy-url
  PUBLIC_PATH: "/AGGRAK/"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # Build with BOTH base-href and deploy-url for reliable asset URLs
      - name: Build Angular (with correct public path)
        run: npx ng build --configuration production --base-href "${PUBLIC_PATH}" --deploy-url "${PUBLIC_PATH}"

      # Find the correct output folder (supports dist/<app>/browser or dist/<app>)
      - name: Detect output dir
        id: outdir
        shell: bash
        run: |
          if [ -d "dist/${REPO_NAME}/browser" ]; then
            echo "path=dist/${REPO_NAME}/browser" >> $GITHUB_OUTPUT
          else
            # fallback: first folder under dist
            FIRST=$(ls -1 dist | head -n1)
            if [ -d "dist/$FIRST/browser" ]; then
              echo "path=dist/$FIRST/browser" >> $GITHUB_OUTPUT
            else
              echo "path=dist/$FIRST" >> $GITHUB_OUTPUT
            fi
          fi
          echo "Using OUTDIR=$(cat $GITHUB_OUTPUT)"

      # SPA fallback so /route refresh doesnâ€™t 404 on Pages
      - name: Add 404 fallback + .nojekyll
        run: |
          cp "${{ steps.outdir.outputs.path }}/index.html" "${{ steps.outdir.outputs.path }}/404.html"
          touch "${{ steps.outdir.outputs.path }}/.nojekyll"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact (only built site)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.outdir.outputs.path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
